Index: app/src/main/java/com/nms/user/utils/api/ApiRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nms.user.utils.api\r\n\r\nimport com.example.nmsadminapp.utils.api.ApiResponse\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Request\r\nimport okhttp3.RequestBody.Companion.toRequestBody\r\n\r\nclass ApiRequest {\r\n    companion object {\r\n\r\n//        private const val BASE_URL = \"http://10.1.51.154/nms/api/\" // College IP\r\n        // private const val BASE_URL = \"http://192.168.1.2/nms/api/\" // Home IP\r\n\r\n         private const val BASE_URL = \"https://hardik.works/nms/api/\" // Personal IP\r\n        // Endpoints for AuthRepository\r\n        const val URL_LOGIN = \"${BASE_URL}auth/login.php\"\r\n        const val URL_REGISTER = \"${BASE_URL}auth/register.php\"\r\n        const val URL_FORGOT_PASSWORD = \"${BASE_URL}auth/forgot_password.php\"\r\n        const val URL_CHANGE_PASSWORD = \"${BASE_URL}auth/change_password.php\"\r\n\r\n        // Endpoints for Handling categories\r\n        const val URL_GET_CATEGORIES = \"${BASE_URL}category/fetch.php\"\r\n\r\n        // Endpoints for Handling addresses\r\n        const val URL_GET_ADDRESSES = \"${BASE_URL}address/fetch.php\"\r\n        const val URL_ADD_ADDRESS = \"${BASE_URL}address/insert.php\"\r\n        const val URL_UPDATE_ADDRESS = \"${BASE_URL}address/update.php\"\r\n        const val URL_DELETE_ADDRESS = \"${BASE_URL}address/delete.php\"\r\n\r\n        // Endpoints for Handling products\r\n        const val URL_GET_PRODUCTS = \"${BASE_URL}product/fetch.php\"\r\n        const val URL_GET_PRODUCT_BY_ID = \"${BASE_URL}product/fetch_by_id.php?id=\"\r\n\r\n        // Endpoints for Handling orders\r\n        const val URL_GET_ALL_ORDERS = \"${BASE_URL}order/fetch.php\"\r\n        const val URL_ADD_ORDER = \"${BASE_URL}order/insert.php\"\r\n        const val URL_UPDATE_ORDER = \"${BASE_URL}order/update.php\"\r\n        const val URL_CANCEL_ORDER = \"${BASE_URL}order/cancel_order.php\"\r\n\r\n        // Endpoints for Handling custom orders\r\n        const val URL_GET_CUSTOM_ORDERS = \"${BASE_URL}custom_order/fetch.php\"\r\n        const val URL_ADD_CUSTOM_ORDER = \"${BASE_URL}custom_order/insert.php\"\r\n        const val URL_UPDATE_CUSTOM_ORDER = \"${BASE_URL}custom_order/update.php\"\r\n        const val URL_DELETE_CUSTOM_ORDER = \"${BASE_URL}custom_order/delete.php\"\r\n        const val URL_GET_CUSTOM_ORDER_BY_ID = \"${BASE_URL}custom_order/fetch_by_id.php?id=\"\r\n        const val URL_GET_CUSTOM_ORDER_BY_USERID =\r\n            \"${BASE_URL}custom_order/fetch_by_user_id.php?user_id=\"\r\n\r\n        // Endpoints for Handling cart\r\n        const val URL_GET_CART_ITEMS = \"${BASE_URL}cart/fetch.php\"\r\n        const val URL_ADD_CART_ITEM = \"${BASE_URL}cart/insert.php\"\r\n        const val URL_UPDATE_CART_QUANTITY = \"${BASE_URL}cart/update_quantity.php\"\r\n        const val URL_DELETE_CART_ITEM = \"${BASE_URL}cart/delete.php\"\r\n\r\n        // Endpoints for Handling reviews\r\n        const val URL_GET_REVIEWS = \"${BASE_URL}review/fetch.php\"\r\n        const val URL_ADD_REVIEW = \"${BASE_URL}review/insert.php\"\r\n        const val URL_UPDATE_REVIEW = \"${BASE_URL}review/update.php\"\r\n        const val URL_DELETE_REVIEW = \"${BASE_URL}review/delete.php\"\r\n\r\n        // Endpoints for Handling Contact Us\r\n        const val URL_GET_CONTACT_US = \"${BASE_URL}contact/fetch.php\"\r\n        const val URL_ADD_CONTACT_US = \"${BASE_URL}contact/insert.php\"\r\n        const val URL_UPDATE_CONTACT_US = \"${BASE_URL}contact/update.php\"\r\n        const val URL_DELETE_CONTACT_US = \"${BASE_URL}contact/delete.php\"\r\n\r\n        // Endpoints for Handling Offers\r\n        const val URL_GET_OFFERS = \"${BASE_URL}offer/fetch.php\"\r\n\r\n        // Endpoints for Handling FAQ\r\n        const val URL_GET_FAQ = \"${BASE_URL}faq/fetch.php\"\r\n\r\n        // Endpoints for Handling Notifications\r\n        const val URL_GET_NOTIFICATIONS = \"${BASE_URL}notification/fetch.php\"\r\n\r\n        // Endpoints for Handling Upload Image\r\n        const val URL_UPLOAD_CATEGORY_IMAGE = \"${BASE_URL}store/upload_category_image.php\"\r\n\r\n        // Method to send get request\r\n        fun getRequest(url: String, token: String? = null): ApiResponse {\r\n            // Remove extra double quotes from token\r\n            return if (token == null) {\r\n                send(\r\n                    Request.Builder()\r\n                        .url(url)\r\n                        .build()\r\n                )\r\n            } else {\r\n                send(\r\n                    Request.Builder()\r\n                        .url(url)\r\n                        .addHeader(\"Authorization\", \"Bearer $token\")\r\n                        .build()\r\n                )\r\n            }\r\n        }\r\n\r\n        // Method to send post request\r\n        fun postRequest(url: String, body: String, token: String? = null): ApiResponse {\r\n            return if (token == null) {\r\n                send(Request.Builder().url(url).post(body.toRequestBody()).build())\r\n            } else {\r\n                send(\r\n                    Request.Builder()\r\n                        .url(url)\r\n                        .post(body.toRequestBody())\r\n                        .addHeader(\"Authorization\", \"Bearer $token\")\r\n                        .build()\r\n                )\r\n            }\r\n        }\r\n\r\n        // Post Request with image\r\n        fun postRequestWithImage(url: String, bodyData: MultipartBody, token: String): ApiResponse {\r\n            return send(\r\n                Request.Builder()\r\n                    .url(url)\r\n                    .post(bodyData)\r\n                    .addHeader(\"Authorization\", \"Bearer $token\")\r\n                    .build()\r\n            )\r\n        }\r\n\r\n        // Method to send request\r\n        private fun send(request: Request): ApiResponse {\r\n            val client = OkHttpClient()\r\n            val response = client.newCall(request).execute()\r\n            return ApiResponse(\r\n                response.code,\r\n                response.body?.string(),\r\n                response.message\r\n            )\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/nms/user/utils/api/ApiRequest.kt b/app/src/main/java/com/nms/user/utils/api/ApiRequest.kt
--- a/app/src/main/java/com/nms/user/utils/api/ApiRequest.kt	(revision ff366d49dbdb9a01d4904f1a3465c9ed7dbd2985)
+++ b/app/src/main/java/com/nms/user/utils/api/ApiRequest.kt	(date 1677813770700)
@@ -9,7 +9,7 @@
 class ApiRequest {
     companion object {
 
-//        private const val BASE_URL = "http://10.1.51.154/nms/api/" // College IP
+        // private const val BASE_URL = "http://10.1.51.154/nms/api/" // College IP
         // private const val BASE_URL = "http://192.168.1.2/nms/api/" // Home IP
 
          private const val BASE_URL = "https://hardik.works/nms/api/" // Personal IP
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM__Changes_.xml	(revision ff366d49dbdb9a01d4904f1a3465c9ed7dbd2985)
+++ /dev/null	(revision ff366d49dbdb9a01d4904f1a3465c9ed7dbd2985)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM_[Changes]" date="1677167550861" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2023_9_21_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/23/2023 9:21 PM [Changes]" />
-</changelist>
\ No newline at end of file
